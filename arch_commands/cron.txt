//cron is a tool to setup scheduled tasks in order to run them automatically at certain times

//scheduled tasks are called cron jobs

//every user on the system has their own set of cron jobs that is called user's cron tab

crontab -l      //see the cron tab for the logged in user

crontab -e      //open the temporarly crontab file to append cron jobs at the end of it


a cron job consists of 6 fields like this (* * * * * <command>):

1.minutes: you can give it a number  between 0-59 or an * representing the minute of time that it will run (* means any minute)

2.hours: you can give it a number between 0-23 or an * representing the hour of time that it will run (* means any hour)

3.days: you can give it a number between 1-31 or an * representing the day of the month that it will run (* means any day of the month)

4.months: you can give it a number between 1-12 or an * representing the month of the year that it will run (* means any month)

5.days of the week: you can give it a number between 0-7 or an * representing the day of the week (0,7 both mean sunday) (* means any day of the week)


//another way to set up cron jobs is by passing a status to it like below

@reboot <command>       //run the command on every reboot

@hourly <command> //run the command every hour

//here is the list of available special strings for status:

    @hourly: The job will run once an hour.
    @daily or @midnight: These strings will run the task every day at midnight.
    @weekly: Use this to run jobs once a week at midnight on Sunday.
    @monthly: This special string runs a command once on the first day of every month.
    @yearly: Use this to run a task once a year at midnight on January 1st.
    @reboot: With this string, the job will run only once at startup.



crontab -u <user> -e        //adding the -u <user> allows you to edit the crontab for other users as well

crontab -u <user> -l        //check the cron tab for specified user


cat /var/log/syslog | grep CRON     //check the log file to make sure your cron jobs ran successfully


//you can redirect a command output to a file with cron jobs

* * * * * date >> /root/date.txt      //adding this line to a crontab adds a line at the end of the date.txt showing the date every minute of every hour of every day of every month (cron creates the file automatically if it doesn't already exist)

NOTE: NEVER USE RELATIVE PATHS FOR CRON JOBS

//you can slice each section as well for example to execute every 5 minutes set the minutes section to */5

//you can set to execute every odd hour with setting the hour to 1-23/2

//you can set to execute every even hour with setting the hour to */2

//you can set to run consecutive days of the week for example monday through friday by setting the days of the week to 1-5 or you can set it to different days by seperating the days with a "," e.g. set it to run only mondays and wednesdays by setting the days of the week to 1,3

//you can run multiple tasks with a cron job by seperating the commands with a ";"


// https://crontab-generator.org is a website to help you create your cron jobs